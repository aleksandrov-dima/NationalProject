

<link rel="stylesheet" href="~/css/chart.css" />

<div class="layout-body content-block" >
    @(Html.DevExtreme().Chart()
        .ID("chart")
        .Animation(true)
        .Palette(VizPalette.HarmonyLight)
        //.Title("Продолжительность жизни")
        .ArgumentAxis(a => a
            .Label(l => l
                .OverlappingBehavior(OverlappingBehavior.Stagger)
            )
        )
        .Export(e => e.Enabled(true))
        .Tooltip(t => t
            .Enabled(false)
            .CustomizeTooltip(
                        @<text>
                            function(info) {
                            return {
                            html: "<div><div class='tooltip-header'>" +
                                    info.argumentText + "</div>" +
                                    "<div class='tooltip-body'><div class='series-name'>" +
                                        "Финансирование: " +
                                        "</div><div class='value-text'>" +
                                        (info.point.data.budjet != null ?info.point.data.budjet:'') +

                                        "</div><div class='series-name'>" +
                                         "Сейчас: " +
                                        "</div><div class='value-text'>" +
                                        (info.point.data.factAge != null ?info.point.data.factAge:'') +

                                        "</div><div class='series-name'>" +
                                         "Планируется: " +
                                        "</div><div class='value-text'>" +
                                        (info.point.data.planDate != null ?info.point.data.planDate:'') +                                        
                                        "</div>" +
                                        "</div></div>"
                            };
                            }
                        </text>)
    )
    .OnPointClick(@<text>
        function(e) {
            var point = e.target;
            var popup = $("#popup").dxPopup(
                                   {
                                                    width: 300,
                                                    height: 250,
                                                    contentTemplate: function() {
                                                        return $("<div />").append(
                                                            $("<p>События: <span>" + point.data.events +
                                                                "</span></p>"),
                                                                                     
                                                     $("<div><div class='series-name'>" +
                                                                "Финансирование: " +
                                                                "</div><div class='value-text'>" +
                                                                (point.data.budjet != null ?point.data.budjet:'') +

                                                                "</div><div class='series-name'>" +
                                                                 "Сейчас: " +
                                                                "</div><div class='value-text'>" +
                                                                (point.data.factAge != null ?point.data.factAge:'') +

                                                                "</div><div class='series-name'>" +
                                                                 "Планируется: " +
                                                                "</div><div class='value-text'>" +
                                                                (point.data.planDate != null ?point.data.planDate:'') +                                        
                                                                "</div></div>")
                                                        );
                                                    },
                                                    showTitle: true,
                                                    title: "Information",
                                                    visible: false,
                                                    dragEnabled: false,
                                                    closeOnOutsideClick: true
                                            }         
            ).dxPopup("instance");

            popup.show();
        }
    </text>)
    .ValueAxis(a =>
    {
    a.Add()
        .Name("budjet")
        .Position(Position.Right)
        .TickInterval(10)
        .Label(l => l
            .CustomizeText(
                @<text>
                    function(info) {
                        return info.valueText + " млн";
                    }
                </text>)
            );
    a.Add()
        .Name("age")
        .Position(Position.Left)
        .ShowZero(false);            
    })
    .CommonSeriesSettings(s => s
        .ArgumentField("year")
    )
    .Series(s =>
                            {
        s.Add()
            .Type(SeriesType.Bar)
            .ValueField("budjet")
            .Axis("budjet")
            .Name("Финансирование, млн/р")
            .Color("#6f42c1");
        s.Add()
            .Type(SeriesType.Spline)
            .ValueField("factAge")
            .Axis("age")
            .Name("Фактический показатель, возраст")
            .Color("#6b71c3");
        s.Add()
            .Type(SeriesType.Spline)
            .ValueField("planDate")
            .Axis("age")
            .Name("Планируемый показатель, возраст")
            .Color("#fac29a");
    })
    .Legend(l => l
        .VerticalAlignment(VerticalEdge.Top)
        .HorizontalAlignment(HorizontalAlignment.Center)
    )
    .DataSource(d => d.Mvc().Controller("Chart").LoadAction("GetComplaintsData"))
    )
</div>
<div id="popup"></div>